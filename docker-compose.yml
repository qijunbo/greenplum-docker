version: "3"
services:
  db_seg_1:
    build: .
    image: qijunbo/greenplum
    environment:
       - GP_NODE=segment
    hostname: db_seg_1
    privileged: true
    command: tail -f /dev/null
    volumes:
      - db_seg_1:/var/lib/gpdb/
      - ./sysctl.conf:/etc/sysctl.conf
      - ./limits.conf:/etc/security/limits.conf
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  db_seg_2:
    build: .
    image: qijunbo/greenplum
    environment:
       - GP_NODE=segment
    hostname: db_seg_2
    privileged: true
    command: tail -f /dev/null
    volumes:
      - db_seg_2:/var/lib/gpdb/
      - ./sysctl.conf:/etc/sysctl.conf
      - ./limits.conf:/etc/security/limits.conf
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  db_standby:
    build: .
    image: qijunbo/greenplum
    environment:
       - GP_NODE=segment
    hostname: db_standby
    privileged: true
    ports:
      - "5431:5432"
    command: tail -f /dev/null
    volumes:
      - db_standby:/var/lib/gpdb/
      - ./sysctl.conf:/etc/sysctl.conf
      - ./limits.conf:/etc/security/limits.conf
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  db_master_1:
    build: .
    image: qijunbo/greenplum
    environment:
       - GP_NODE=master
       - HOSTFILE=multihost
    hostname: db_master_1
    privileged: true
    command: tail -f /dev/null
    volumes:
      - db_master_1:/var/lib/gpdb/
      - ./sysctl.conf:/etc/sysctl.conf
      - ./multihost:/var/lib/gpdb/setup/hostlist
      - ./limits.conf:/etc/security/limits.conf
    depends_on: 
      - db_seg_1
      - db_seg_2
      - db_standby
    ports:
      - "5432:5432"
    links:
      - db_seg_1:seg1
      - db_seg_2:seg2
      - db_standby:standby
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "9999:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
volumes:
  db_master_1:
  db_seg_1:
  db_seg_2:
  db_standby:
networks:
  webnet:
